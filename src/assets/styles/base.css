/* Default HTML element styles go in this file. */
/* The `preflight.css` file clears some of the default styles for HTML elements, so you need to define default styles for your HTML elements in this file. */
/* These form the base styles that can be modified in your .svelte files. */
/* NOTE: I haven't been able to figure out how to get CSS nesting to work outside of Svelte components. */

/* body {
  Hide horizontal scrollbar.
  This style rule is used to compensate for the issue in the `Page.svelte` component.
  overflow-x: hidden;
} */

html, body {
  font-family: var(--sans-serif);
  font-size: var(--font-size-xl);
  color: var(--text-color-default);
  font-weight: 400;
}

h1, h2, h3, h4, h5, h6 {
  margin-top: 40px;
  margin-bottom: 20px;
  font-family: var(--sans-serif);
  font-weight: 900;
}

h1 {
  margin-top: 0;
}

@media (min-width: 0px) {
  h1 {
    font-size: 2rem;
  }

  h2 {
    font-size: 1.8rem;
  }
  
  h3 {
    font-size: 1.6rem;
  }
  
  h4 {
    font-size: 1.4rem;
  }
  
  h5 {
    font-size: 1.2rem;
  }
  
  h6 {
    font-size: 1rem;
  }
}

@media (min-width: 768px) {
  h1 {
    font-size: 2.5rem;
  }

  h2 {
    font-size: 2.2rem;
  }
  
  h3 {
    font-size: 1.9rem;
  }
  
  h4 {
    font-size: 1.6rem;
  }
  
  h5 {
    font-size: 1.3rem;
  }
  
  h6 {
    font-size: 1rem;
  }
}

p {
  margin-bottom: 20px;
}

ul, ol {
  list-style-position: outside;
  /* This margin style will keep the space between <li> elements equal, even if those <li> elements are nested. */
  margin: 10px 0;
  padding-left: 30px;
}

ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}

li {
  margin-bottom: 10px;
}

a {
  color: var(--primary-color);
  text-decoration-line: none;
  border-bottom: 1px dotted var(--primary-color);
  cursor: pointer;
}

a:hover {
  border-bottom: none;
}

br {
  line-height: 0; /* Firefox adds a line-height to <br> tags, so this removes that. */
  margin-bottom: 20px;
}

hr {
  margin: 30px 0;
  border: none;
  border-top: var(--border-default);
}

/* <pre> or triple backticks. The background color might have a conflict with the "prismjs" package, so I have added `!important`. */
/* pre {
  font-family: var(--monospace);
  padding: 10px;
  margin-bottom: 20px;
  border-radius: var(--border-radius);
  background-color: var(--bg-color-element-default) !important;
  overflow-x: auto;
} */

/* <code> or single backticks. See the comment for the `pre` styles above. */
/* code {
  font-family: var(--monospace);
  padding: 0 3px;
  border-radius: var(--border-radius);
  background-color: var(--bg-color-element-default) !important;
  overflow-x: auto;
} */

pre, code {
  font-size: 0.8rem;
}

@media (min-width: 0px) {
  aside {
    padding: 10px;
    background-color: var(--neutral-100);

    & h2, h3, h4 {
      margin-top: 0;
    }
  }
}

@media (min-width: 1024px) {
  aside {
    padding: 20px;
  }
}

/* --------------------------------------------------------------------- */
/* TABLE STYLES */
/* TODO: The following table styles should be used in a table component. */
/* --------------------------------------------------------------------- */
table {
  width: 100%;
  margin-top: 40px;
  margin-bottom: 40px;
  border-collapse: collapse;
}

tr {
  border-bottom: var(--border-default);
}

tbody tr:last-child {
  border-bottom: none;
}

th, td {
  padding: 10px 25px;
  text-align: left;
  vertical-align: top;
}

tbody.hljs, td.hljs {
  background-color: var(--secondary-color) !important;
}
